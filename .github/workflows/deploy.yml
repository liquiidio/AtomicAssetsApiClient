name: Deploy

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Tag to publish [0-9]+.[0-9]+.[0-9]+*'
        required: true
        default: ''
        type: string
  push:
    tags: 
      - "[0-9]+.[0-9]+.[0-9]+*"

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 3.1.x
      - name: Install dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build --configuration Release --no-restore
      - name: Test
        run: dotnet test --verbosity normal --logger trx --results-directory "TestResults"
      - name: Upload dotnet test results
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: TestResults
        # Use always() to always run this step to publish test results when there are test failures
        if: ${{ always() }}

  pack:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 3.1.x
      - name: Determine version
        run: echo "VERSION=$(git describe --tags --dirty)" >> $GITHUB_ENV
      - name: Pack
        run: dotnet pack --output ./artifacts --configuration Release -p:Version=$VERSION
      - name: Upload package
        uses: actions/upload-artifact@v1
        with:
          name: artifacts
          path: ./artifacts  
      
  release:
    runs-on: ubuntu-latest
    needs: pack
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Determine version
        run: echo "VERSION=$(git describe --tags --dirty)" >> $GITHUB_ENV
      - name: Create a GitHub release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ env.VERSION }}
          name: Release ${{ env.VERSION }}
          body: ${{ env.VERSION }}
  
  github-publish:
    runs-on: ubuntu-latest
    needs: release
    if: github.event_name == 'push'
    steps:
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 3.1.x
      - name: Download package
        uses: actions/download-artifact@v1
        with:
          name: artifacts
          path: ./artifacts
      - name: Publish packages
        run: dotnet nuget push ./artifacts**.nupkg --api-key ${{secrets.GITHUB_TOKEN}} --source "https://nuget.pkg.github.com/liquiidio/index.json"
